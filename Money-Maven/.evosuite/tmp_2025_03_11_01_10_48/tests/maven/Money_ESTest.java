/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 11 05:12:37 GMT 2025
 */

package maven;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import maven.Money;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Money_ESTest extends Money_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Money money0 = new Money(1, "");
      Money money1 = new Money(0, "");
      boolean boolean0 = money0.equals(money1);
      assertEquals(1, money0.getAmount());
      assertFalse(money1.equals((Object)money0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Money money0 = new Money(0, (String) null);
      money0.getCurrency();
      assertEquals(0, money0.getAmount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Money money0 = new Money(0, "");
      money0.getCurrency();
      assertEquals(0, money0.getAmount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Money money0 = new Money(0, "0u:{Ah<O42.Wf;");
      int int0 = money0.getAmount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Money money0 = new Money(1, "maven.Money");
      int int0 = money0.getAmount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Money money0 = new Money(0, "");
      Money money1 = money0.add(money0);
      assertEquals(0, money1.getAmount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Money money0 = new Money((-1893), "");
      Money money1 = money0.add(money0);
      assertEquals((-1893), money0.getAmount());
      assertEquals((-3786), money1.getAmount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Money money0 = new Money(140, (String) null);
      // Undeclared exception!
      try { 
        money0.equals(money0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Money money0 = new Money(0, "");
      // Undeclared exception!
      try { 
        money0.add((Money) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("maven.Money", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Money money0 = new Money((-1557), "/Y0");
      money0.getCurrency();
      assertEquals((-1557), money0.getAmount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Money money0 = new Money((-483), "duln7<i {5 cVp\"");
      int int0 = money0.getAmount();
      assertEquals((-483), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Money money0 = new Money((-2013504240), "[r1z8;Bn");
      Money money1 = new Money((-2013504240), "8>93<JB aTV&~>;+");
      boolean boolean0 = money1.equals(money0);
      assertEquals((-2013504240), money1.getAmount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Money money0 = new Money((-2013504240), "[r1z8;Bn");
      boolean boolean0 = money0.equals("8>94<JB aTV&~>;+");
      assertFalse(boolean0);
      assertEquals((-2013504240), money0.getAmount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Money money0 = new Money((-2013504240), "[r1z8;Bn");
      boolean boolean0 = money0.equals(money0);
      assertEquals((-2013504240), money0.getAmount());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Money money0 = new Money((-2013504240), "[r1z8;Bn");
      Money money1 = money0.add(money0);
      boolean boolean0 = money0.equals(money1);
      assertFalse(money1.equals((Object)money0));
      assertEquals((-2013504240), money0.getAmount());
      assertFalse(boolean0);
      assertEquals(267958816, money1.getAmount());
  }
}
